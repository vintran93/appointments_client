{"version":3,"sources":["styles/Sidebar.module.css","actions/permit.js","services/auth-service.js","assets/logo.png","components/Sidebar.js","actions/auth.js","components/Home.js","components/Login.js","components/Register.js","components/Profile.js","components/Doctors.js","actions/message.js","services/auth-header.js","actions/doctorActions.js","components/DoctorForm.js","components/DoctorsContainer.js","components/Doctor.js","components/AppointmentsList.js","components/AppointmentsContainer.js","components/Appointment.js","components/NewAppointment.js","App.js","reducers/authReducer.js","reducers/rootReducer.js","reducers/doctorsReducer.js","reducers/appointmentReducer.js","reducers/messageReducer.js","index.js","styles/Doctor.module.css","styles/Doctors.module.css","styles/Home.module.css"],"names":["module","exports","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_URL","authService","register","name","email","password","axios","post","then","response","data","jwt","localStorage","setItem","JSON","stringify","login","logout","removeItem","Sidebar","currentUser","useSelector","state","auth","user","dispatch","useDispatch","type","className","classes","hamburger","onClick","document","querySelector","classList","toggle","icon","faBars","size","sidenav","to","src","logo","alt","navlink","activeClassName","active","exact","href","Home","Overlay","Select","Button","required","value","role","Login","form","useRef","checkBtn","useState","setEmail","setPassword","loading","setLoading","isLoggedIn","message","alert","useAlert","onSubmit","e","preventDefault","current","context","_errors","length","payload","Promise","resolve","error","reject","show","timeout","catch","ref","htmlFor","id","onChange","emailInput","target","validations","passwordValue","disabled","style","display","validEmail","isEmail","nameLength","passwordLength","Register","setName","successful","setSuccessful","validateAll","console","log","passwordInput","Profile","connect","doctors","doctorsList","map","doctor","Doctors","image","img","border","specialty","education","additionalTransfrom","arrows","autoPlaySpeed","containerClass","dotListClass","focusOnSelect","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","mobile","tablet","sliderClass","slidesToSlide","setMessage","authHeader","parse","getItem","Authorization","authJWT","fetchDoctors","fetch","headers","resp","json","doctorActions","fetchDoctor","getAppointment","userId","appointmentId","postAppointment","doctorId","appointmentDate","method","body","deleteAppointment","deleteDoctor","DoctorForm","experience","address","handleChange","setState","handleSubmit","props","addDoctor","this","marginLeft","Component","DoctorsContainer","Doctor","setDoctor","useParams","useEffect","doctorImg","badge","badgeSecondary","appointments","appointmentList","appointment","date","Date","appointment_date","toUTCString","AppointmentsContainer","fetchAppointments","Appointment","setAppointment","setError","doctor_id","moment","add","format","setDoctorId","setAppointmentDate","loadingDoctors","setLoadingDoctors","selection","App","path","element","initialState","rootReducer","combineReducers","action","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","createRoot","getElementById","render","template","AlertTemplate"],"mappings":"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","file":"static/js/main.60ac753e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburger\":\"Sidebar_hamburger__HdHuq\",\"sidenav\":\"Sidebar_sidenav__28N8N\",\"toggle\":\"Sidebar_toggle__Fzqz7\",\"navlink\":\"Sidebar_navlink__1smyW\",\"active\":\"Sidebar_active__3KuTn\",\"logo\":\"Sidebar_logo__3LpBR\",\"social\":\"Sidebar_social__MOBeH\",\"main\":\"Sidebar_main__3sOBt\"};","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const DOCTORS_SUCCESS = 'DOCTORS_SUCCESS';\nexport const DOCTORS_FAIL = 'DOCTORS_FAIL';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\nexport const APPOINTMENTS_SUCCESS = 'APPOINTMENTS_SUCCESS';\nexport const APPOINTMENTS_FAIL = 'APPOINTMENTS_FAIL';\n\n// export all local variables regarding success/fail attempts in permit.js\n// filter out required dispatched actions","import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/';\n\nconst register = (name, email, password) => axios.post(`${API_URL}api/v1/users`, {\n    name,\n    email,\n    password,\n})\n    .then(response => {\n        if (response.data.jwt) {\n            localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response;\n    });\n\nconst login = (email, password) => axios.post(`${API_URL}login`, {\n    email,\n    password,\n})\n    .then(response => {\n        if (response.data.jwt) {\n            localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response.data;\n    });\n\nconst logout = () => {\n    localStorage.removeItem('user');\n};\n\nconst authService = {\n    register,\n    login,\n    logout,\n};\n\nexport default authService","export default __webpack_public_path__ + \"static/media/logo.043ce2bf.png\";","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { logout } from '../actions/auth';\nimport logo from '../assets/logo.png';\nimport classes from '../styles/Sidebar.module.css';\n\nconst Sidebar = () => {\n    const { user: currentUser } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const logOut = () => {\n        dispatch(logout());\n    };\n\n    const toggleMenu = () => {\n        const navMenu = document.querySelector('nav');\n        navMenu.classList.toggle(classes.toggle);\n    };\n\n    return (\n        <div>\n            <button type=\"button\" className={classes.hamburger} onClick={toggleMenu}>\n                <FontAwesomeIcon icon={faBars} size=\"2x\" />\n            </button>\n            <nav className={`${classes.sidenav} ${classes.toggle}`}>\n                <NavLink to=\"/\">\n                    <img src={logo} alt=\"logo\" className={classes.logo} />\n                </NavLink>\n                {currentUser\n                    && (\n                        <NavLink to=\"/profile\" className={classes.navlink} activeClassName={classes.active}>\n                            Profile\n                        </NavLink>\n                    )}\n                {currentUser ? (\n                    <ul>\n                        <li>\n                            <NavLink to=\"/doctors\" className={classes.navlink} activeClassName={classes.active}>\n                                Doctors\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact to=\"/appointments\" className={classes.navlink} activeClassName={classes.active}>\n                                Appointments\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/appointments/new\" className={classes.navlink} activeClassName={classes.active}>\n                                Schedule Appointment\n                            </NavLink>\n                        </li>\n                        <li>\n                            <a href=\"/login\" onClick={logOut} className={classes.navlink}>\n                                Logout\n                            </a>\n                        </li>\n                    </ul>\n                ) : (\n                    <ul>\n                        <li>\n                            <NavLink to=\"/login\" className={classes.navlink} activeClassName={classes.active}>\n                                Login\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/register\" className={classes.navlink} activeClassName={classes.active}>\n                                Sign Up\n                            </NavLink>\n                        </li>\n                    </ul>\n                )}\n\n                <footer>\n                    <br></br><br></br>\n                    <p> Medical Health Service Center &copy;2022</p>\n                </footer>\n            </nav>\n        </div>\n    );\n};\n\nexport default Sidebar;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n} from './permit';\n\nimport authService from '../services/auth-service';\n\nexport const register = (name, email, password) => dispatch => authService.register(name, email, password)\n    .then(response => {\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: { user: response.data },\n        });\n\n        dispatch({\n            type: SET_MESSAGE,\n            payload: response.data.message,\n        });\n\n        return Promise.resolve();\n    },\n        error => {\n            console.log(error.response);\n            const message = (error.response);\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        },\n    );\n\nexport const login = (email, password) => dispatch => authService.login(email, password).then(\n    data => {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: { user: data },\n        });\n\n        return Promise.resolve();\n    },\n    error => {\n        const message = (error.response);\n        dispatch({\n            type: LOGIN_FAIL,\n        });\n\n        dispatch({\n            type: SET_MESSAGE,\n            payload: message,\n        });\n\n        return Promise.reject();\n    },\n);\n\nexport const logout = () => dispatch => {\n    authService.logout();\n\n    dispatch({\n        type: LOGOUT,\n    });\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from '../styles/Home.module.css';\n\nconst Home = () => (\n    <div className={classes.Home}>\n        <div className={classes.Overlay}>\n            <div className=\"d-flex justify-content-center flex-column align-items-center h-75\">\n                <h2> BOOK AN APPOINTMENT TODAY! </h2>\n                <div className=\"d-flex mt-3\">\n                    <select className={`${classes.Select} ${classes.Button} mr-4`}>\n                        <option> Austin, Texas</option>\n                        <option> Round Rock, Texas</option>\n                        <option> Pflugerville, Texas</option>\n                    </select>\n                    <Link to=\"/appointments/new\" className={classes.Button}>\n                        Book Appointment\n                    </Link>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Home;\n\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { login } from '../actions/auth';\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n    return '';\n};\n\nfunction Login() {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const { isLoggedIn } = useSelector(state => state.auth);\n    const { message } = useSelector(state => state.message);\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const onChangeEmail = e => {\n        const emailInput = e.target.value;\n        setEmail(emailInput);\n    };\n\n\n\n\n    const onChangePassword = e => {\n        const passwordValue = e.target.value;\n        setPassword(passwordValue);\n    };\n\n    const handleLogin = e => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        if (checkBtn.current.context._errors.length === 0) {\n            dispatch(login(email, password))\n                .then(() => {\n                    setLoading(false);\n                    alert.show('Login successful', {\n                        type: 'success',\n                        timeout: 5000,\n                    });\n                })\n                .catch(() => {\n                    setLoading(false);\n                });\n        } else {\n            setLoading(false);\n        }\n    };\n\n    if (isLoggedIn) {\n        return <Navigate to=\"/doctors\" />;\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Form onSubmit={handleLogin} ref={form}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Input\n                            id=\"email\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" disabled={loading} type=\"submit\">\n                            {loading && (\n                                <span className=\"spinner-border spinner-border-sm\" />\n                            )}\n                            <span>Login</span>\n                        </button>\n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail } from 'validator';\nimport { useAlert } from 'react-alert';\nimport { register } from '../actions/auth';\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n    return null;\n};\n\nconst validEmail = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n    return null;\n};\n\nconst nameLength = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The name must be between 3 and 20 characters.\n            </div>\n        );\n    }\n    return null;\n};\n\nconst passwordLength = value => {\n    if (value.length < 5 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 5 and 40 characters.\n            </div>\n        );\n    }\n    return null;\n};\n\nconst Register = () => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [successful, setSuccessful] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const { message } = useSelector(state => state.message);\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const onChangeName = e => {\n        const name = e.target.value;\n        setName(name);\n    };\n\n    const onChangeEmail = e => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = e => {\n        const passwordInput = e.target.value;\n        setPassword(passwordInput);\n    };\n\n    const handleRegister = e => {\n        e.preventDefault();\n        setLoading(true);\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            dispatch(register(name, email, password))\n                .then(() => {\n                    setLoading(false);\n                    setSuccessful(true);\n                    alert.show('Account created', {\n                        type: 'success',\n                        timeout: 5000,\n                    });\n                })\n                .catch(() => {\n                    setLoading(false);\n                    setSuccessful(false);\n                });\n        } else {\n            setLoading(false);\n        }\n    };\n\n    if (successful) {\n        return <Navigate to=\"/doctors\" />;\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleRegister} ref={form}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={onChangeName}\n                                    validations={[required, nameLength]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}\n                                    validations={[required, validEmail]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                    validations={[required, passwordLength]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" disabled={loading} type=\"submit\">\n                                    {loading && (\n                                        <span className=\"spinner-border spinner-border-sm\" />\n                                    )}\n                                    <span>Sign Up</span>\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst Profile = () => {\n    const { user: currentUser } = useSelector(state => state.auth);\n\n    if (!currentUser) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    return (\n        <div className=\"container\">\n            <h3>\n                Welcome to your profile, <strong>{currentUser.user.name}!</strong>\n            </h3>\n            <br></br>\n            <p>\n                <strong>Name:</strong>\n                &nbsp; {currentUser.user.name}\n            </p>\n            <br></br>\n            <p>\n                <strong>Email:</strong>\n                &nbsp; {currentUser.user.email}\n            </p>\n            <br></br>\n            <p>\n                <strong>Token:</strong>\n                &nbsp; {currentUser.jwt}\n            </p>\n            <br></br>\n            <p>\n                <strong>User Id:</strong>\n                &nbsp; {currentUser.user.id}\n            </p>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport classes from '../styles/Doctors.module.css';\nimport { connect } from 'react-redux';\n\nconst DoctorsList = ({ doctors }) => {\n\n    const doctorsList = doctors.map(doctor => (\n        <div key={doctor.id}>\n            <Link to={`/doctors/${doctor.id}`} className={classes.Doctors}>\n                <div className=\"d-flex flex-column align-items-center\">\n                    <img src={doctor.image} alt={doctor.name} className={`rounded-circle ${classes.img}`} />\n                    <h5 className={`text-dark p-4 ${classes.border}`}>{doctor.name}</h5>\n                    <p className=\"text-secondary mt-3\">\n                        <strong>Specialty:&nbsp;</strong>\n                        {doctor.specialty}\n                    </p>\n                    <p className=\"text-secondary mt-3\">\n                        <strong>Education:&nbsp;</strong>\n                        {doctor.education}\n                    </p>\n                </div>\n            </Link>\n        </div>\n    ));\n    return (\n        <div className=\"container text-center\">\n            <Carousel\n                additionalTransfrom={0}\n                arrows\n                autoPlaySpeed={3000}\n                className=\"\"\n                containerClass=\"container\"\n                dotListClass=\"\"\n                focusOnSelect={false}\n                itemClass=\"\"\n                keyBoardControl\n                minimumTouchDrag={80}\n                renderButtonGroupOutside={false}\n                renderDotsOutside={false}\n                responsive={{\n                    desktop: {\n                        breakpoint: {\n                            max: 3000,\n                            min: 1024,\n                        },\n                        items: 3,\n                        partialVisibilityGutter: 40,\n                    },\n                    mobile: {\n                        breakpoint: {\n                            max: 464,\n                            min: 0,\n                        },\n                        items: 1,\n                        partialVisibilityGutter: 30,\n                    },\n                    tablet: {\n                        breakpoint: {\n                            max: 1024,\n                            min: 464,\n                        },\n                        items: 2,\n                        partialVisibilityGutter: 30,\n                    },\n                }}\n                sliderClass=\"\"\n                slidesToSlide={1}\n            >\n                {doctorsList}\n            </Carousel>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { doctors: state.doctors }\n}\n\nexport default connect(mapStateToProps)(DoctorsList);\n\n","import { SET_MESSAGE } from './permit';\n\nexport const setMessage = message => ({\n    type: SET_MESSAGE,\n    payload: message,\n});\n\n// use this export to dispatch action","export const authHeader = () => {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.jwt) {\n        return { Authorization: `Bearer ${user.jwt}` };\n    }\n\n}\n\nexport const authJWT = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.jwt) {\n        return `Bearer ${user.jwt}`;\n    }\n}\n","import { setMessage } from '../actions/message';\nimport { authJWT, authHeader } from '../services/auth-header';\n\n// const API_URL = 'https://appointments-app-api.herokuapp.com/';\nconst API_URL = 'http://localhost:3000/';\n\nconst fetchDoctor = (id) => fetch(`${API_URL}/api/v1/doctors/${id}`, { headers: authHeader() })\n\nconst getAppointment = (userId, appointmentId) => fetch(`${API_URL}/api/v1/users/${userId}/appointments/${appointmentId}`, { headers: authHeader() });\n\nconst postAppointment = (userId, doctorId, appointmentDate) => {\n    return fetch(`${API_URL}/api/v1/users/${userId}/appointments`, {\n        method: 'POST', headers: { 'Authorization': authJWT(), 'Content-Type': 'application/json' },\n        body: JSON.stringify({ 'doctor_id': doctorId, 'appointment_date': appointmentDate })\n    });\n}\n\nconst deleteAppointment = (userId, appointmentId) => {\n    return fetch(`${API_URL}/api/v1/users/${userId}/appointments/${appointmentId}`,\n        { method: 'DELETE', headers: authHeader() });\n}\n\nconst deleteDoctor = (id) => {\n    return fetch(`${API_URL}/api/v1/doctors/${id}`,\n        { method: 'DELETE', headers: authHeader() });\n}\n\nexport const fetchDoctors = () => {\n    return (dispatch) => {\n        fetch(`${API_URL}/api/v1/doctors`, { headers: authHeader() })\n            .then(resp => resp.json())\n            .then(doctors => dispatch({ type: 'FETCH_DOCTORS', payload: doctors }))\n            .catch(() => {\n                dispatch(setMessage('Unable to get doctors list'));\n            });\n    }\n}\n\nexport const fetchAppointments = id => {\n    return (dispatch) => {\n        console.log('here')\n        fetch(`${API_URL}/api/v1/users/${id}/appointments`, { headers: authHeader() })\n            .then(resp => resp.json())\n            .then(appointments => dispatch({ type: 'FETCH_APPOINTMENTS', payload: appointments }))\n    }\n}\n\nexport const addDoctor = doctor => {\n    // console.log(doctor)\n    return (dispatch) => {\n        fetch(`${API_URL}/api/v1/doctors`, {\n            method: 'POST',\n            body: JSON.stringify(doctor),\n            headers: { 'Authorization': authJWT(), 'Content-Type': 'application/json' }\n        })\n            .then(resp => resp.json())\n            .then(doctor => dispatch({ type: 'ADD_DOCTOR', payload: doctor }))\n    }\n}\n\nconst doctorActions = {\n    fetchDoctor,\n    getAppointment,\n    postAppointment,\n    deleteAppointment,\n    deleteDoctor\n};\n\nexport default doctorActions;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctor } from '../actions/doctorActions'\n\nclass DoctorForm extends Component {\n\n    state = {\n        name: '',\n        education: '',\n        specialty: '',\n        experience: '',\n        image: '',\n        address: ''\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addDoctor(this.state)\n        this.setState({\n            name: '',\n            education: '',\n            specialty: '',\n            experience: '',\n            image: '',\n            address: ''\n        })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} style={{ marginLeft: '45px' }}>\n                <h2>Create a Doctor</h2>\n                <label>Name:</label>\n                <input type='text' value={this.state.name} onChange={this.handleChange} name='name' />\n                <br />\n                <label>Education:</label>\n                <input type='text' value={this.state.education} onChange={this.handleChange} name='education' />\n                <br />\n                <label>Specialty:</label>\n                <input type='text' value={this.state.specialty} onChange={this.handleChange} name='specialty' />\n                <br />\n                <label>Experience:</label>\n                <input type='text' value={this.state.experience} onChange={this.handleChange} name='experience' />\n                <br />\n                <label>Image:</label>\n                <input type='text' value={this.state.image} onChange={this.handleChange} name='image' />\n                <br />\n                <label>Address:</label>\n                <input type='text' value={this.state.address} onChange={this.handleChange} name='address' />\n                <br /><br />\n                <input type='submit' value='Create Doctor' />\n            </form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDoctor: (doctor) => dispatch(addDoctor(doctor))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(DoctorForm);","import React, { Component } from 'react'\nimport Doctors from './Doctors';\nimport DoctorForm from './DoctorForm';\nimport { connect } from 'react-redux';\nimport { fetchDoctors } from '../actions/doctorActions';\n\nclass DoctorsContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchDoctors()\n    }\n\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <h3>Doctors List</h3>\n                <p className=\"text-secondary\">Please select a doctor for more details.</p>\n                <Doctors />\n                <hr />\n                <DoctorForm />\n                <br />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchDoctors: () => dispatch(fetchDoctors())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(DoctorsContainer);","import React, { useState, useEffect } from 'react';\nimport { useParams, Navigate, Link } from 'react-router-dom';\nimport classes from '../styles/Doctor.module.css';\nimport { useAlert } from 'react-alert';\nimport doctorActions from '../actions/doctorActions';\n\nfunction Doctor() {\n    const [doctor, setDoctor] = useState('');\n    const [successful, setSuccessful] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const { id } = useParams();\n    const alert = useAlert();\n\n    useEffect(() => {\n        doctorActions.fetchDoctor(id)\n            .then(resp => resp.json())\n            .then(response => {\n                setLoading(false);\n                setDoctor(response);\n            },\n                error => {\n                    setLoading(false);\n                    const message = (error.response\n                        && error.response.data\n                        && error.response.data.message)\n                    setDoctor(message);\n                },\n            );\n    }, [id]);\n\n    const handleDelete = () => {\n        setLoading(true);\n        doctorActions.deleteDoctor(id)\n            .then(() => {\n                alert.show('Doctor Deleted', {\n                    type: 'success',\n                    timeout: 2000,\n                });\n                setLoading(false);\n                setSuccessful(true);\n            });\n    };\n\n    if (successful) {\n        return <Navigate to=\"/doctors\" />;\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"text-center\">\n                {loading && <span className=\"spinner-border spinner-border-lg\" />}\n            </div>\n            <div className={classes.Doctor}>\n                <img src={doctor.image} className={classes.doctorImg} alt='' />\n                <div>\n                    <h2>\n                        {doctor.name}\n                    </h2>\n                    <p className={`${classes.badge} ${classes.badgeSecondary}`}>\n                        Evaluation Fee: &nbsp; $ 50.00\n                    </p>\n                    <p className={classes.badge}>\n                        Education: &nbsp;&nbsp;\n                        {doctor.education}\n                    </p>\n                    <p className={`${classes.badge} ${classes.badgeSecondary}`}>\n                        Specialty: &nbsp;&nbsp;\n                        {doctor.specialty}\n                    </p>\n                    <p className={classes.badge}>\n                        Experience: &nbsp;\n                        {doctor.experience}\n                    </p>\n                    <p className={`${classes.badge} ${classes.badgeSecondary}`}>\n                        Address: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        {doctor.address}\n                    </p>\n                    <br />\n                    <li>\n                        <Link\n                            to=\"/appointments/new\"\n                            className=\"btn btn-primary btn-block\"\n                            type=\"button\"\n                        >\n                            Book An Appointment\n                        </Link>\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            onClick={handleDelete}\n                        >\n                            Delete Doctor\n                        </button>\n                    </li>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Doctor;","import React from 'react';\nimport { Navigate, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\n\nfunction AppointmentsList({ appointments }) {\n    let appointmentList\n    const { user: currentUser } = useSelector(state => state.auth);\n\n    if (!currentUser) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    if (appointments.length === 0) {\n        appointmentList = (\n            <h4>\n                You do not have any appointments yet. Schedule one\n                <Link to=\"/appointments/new\">\n                    &nbsp; here.\n                    {/* Non-breaking space */}\n                </Link>\n            </h4>\n        );\n    } else {\n        appointmentList = appointments && appointments.map(appointment => {\n            const d = new Date(appointment.appointment_date);\n            const date = d.toUTCString();\n            return (\n                <Link to={`/appointments/${appointment.id}`} key={appointment.id}>\n                    <div className=\"card m-4\">\n                        <div className=\"card-body\">\n                            <p>\n                                On&nbsp;{date}\n                            </p>\n                        </div>\n                    </div>\n                </Link>\n            );\n        });\n    }\n\n    return (\n        <div className=\"container text-center\">\n            <div className=\"d-flex flex-wrap\">\n                {appointmentList}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { appointments: state.appointments, currentUser: state.auth }\n}\n\nexport default connect(mapStateToProps)(AppointmentsList);\n\n","import { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchAppointments } from '../actions/doctorActions';\nimport AppointmentsList from './AppointmentsList';\n\nclass AppointmentsContainer extends Component {\n\n    componentDidMount() {\n        // console.log(this.props.currentUser)\n        this.props.fetchAppointments(this.props.currentUser.user.user.id)\n    }\n\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <h3>Appointments</h3>\n                <p className=\"text-secondary\">Here are your scheduled dates.</p>\n                <AppointmentsList />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { currentUser: state.auth }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAppointments: (id) => dispatch(fetchAppointments(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentsContainer);\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport doctorActions from '../actions/doctorActions';\nimport moment from 'moment';\nimport classes from '../styles/Doctors.module.css';\n\nfunction Appointment() {\n\n    const [appointment, setAppointment] = useState('');\n    const [doctor, setDoctor] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [successful, setSuccessful] = useState(false);\n    const [error, setError] = useState(false);\n    const { user: currentUser } = useSelector(state => state.auth);\n    const alert = useAlert();\n    const { id } = useParams();\n\n    useEffect(() => {\n        doctorActions.getAppointment(currentUser.user.id, id)\n            .then(resp => resp.json())\n            .then(response => {\n                setAppointment(response);\n                return response.doctor_id;\n            },\n                error => {\n                    setLoading(false);\n                    setError(true);\n                    const message = (error.response);\n                    setAppointment(message);\n                },\n            ).then(doctorId => doctorActions.fetchDoctor(doctorId))\n            .then(resp => resp.json())\n            .then(response => {\n                setLoading(false);\n                setDoctor(response);\n            });\n    }, [currentUser.user.id, id]);\n\n    const handleDelete = () => {\n        setLoading(true);\n        doctorActions.deleteAppointment(currentUser.user.id, id)\n            .then(() => {\n                alert.show('Appointment Deleted', {\n                    type: 'success',\n                    timeout: 5000,\n                });\n                setLoading(false);\n                setSuccessful(true);\n            });\n    };\n\n    if (!currentUser) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    if (successful) {\n        return <Navigate to=\"/appointments\" />;\n    }\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                {loading && <span className=\"spinner-border spinner-border-lg\" />}\n                {doctor && (\n                    <div>\n                        <img src={doctor.image} alt={doctor.name} className={`rounded-circle ${classes.img}`} />\n                        <br></br><br></br>\n                        <p>\n                            Appointment Id: &nbsp;\n                            {appointment.id}\n                        </p>\n                        <p>\n                            Provider: &nbsp;\n                            <Link to={`/doctors/${doctor.id}`}>\n                                {doctor.name} - {doctor.specialty}\n                            </Link>\n                        </p>\n                        <p>\n                            Address: {doctor.address}\n                        </p>\n                        <p>\n                            When: &nbsp;\n                            {moment(appointment.appointment_date).add(5, 'hours').format('LLL')}\n                        </p>\n                        <p> What to bring: </p>\n                        <p>  1. Photo ID </p>\n                        <p>  2. Insurance Card </p>\n                        <p>  3. Arrive 10 minutes early to complete paperwork. </p>\n                        <p> * Any cancellations must be at least 24 hours in advance to avoid cancellation fees. </p>\n                        <button className=\"btn btn-primary btn-block\" type=\"button\" onClick={handleDelete} disabled={loading}>\n                            Cancel\n                        </button>\n                    </div>\n                )\n                }\n                {\n                    error && <p>{appointment}</p>\n                }\n            </header>\n        </div>\n    );\n};\n\nexport default Appointment;","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { useAlert } from 'react-alert';\nimport doctorActions from '../actions/doctorActions';\nimport { setMessage } from '../actions/message';\nimport { fetchDoctors } from '../actions/doctorActions';\nimport { connect } from 'react-redux';\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n    return null;\n};\n\nfunction NewAppointment(props) {\n    const form = useRef();\n    const checkBtn = useRef();\n    const { user: currentUser } = useSelector(state => state.auth);\n    const [doctorId, setDoctorId] = useState('');\n    const [appointmentDate, setAppointmentDate] = useState('');\n    const [successful, setSuccessful] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [loadingDoctors, setLoadingDoctors] = useState(false);\n    const { message } = useSelector(state => state.message);\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    useEffect(() => {\n        if (doctorId) {\n            setDoctorId(doctorId);\n        } else {\n            setDoctorId(1);\n        }\n        if (props.doctors.length === 0 && currentUser) {\n            setLoadingDoctors(true);\n            dispatch(fetchDoctors())\n            setLoadingDoctors(false);\n        }\n    }, [currentUser, doctorId, props.doctors, dispatch]); // no dependency array reruns on every render\n\n    const onChangeDoctorId = e => {\n        const doctorId = e.target.value;\n        setDoctorId(doctorId);\n    };\n\n    const onChangeAppointmentDate = e => {\n        const appointmentDate = e.target.value;\n        setAppointmentDate(appointmentDate);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setLoading(true);\n        setSuccessful(false);\n\n        if (checkBtn.current.context._errors.length === 0) {\n            doctorActions.postAppointment(currentUser.user.id, doctorId, appointmentDate)\n                .then(resp => resp.json())\n                .then(() => {\n                    setLoading(false);\n                    setSuccessful(true);\n                    alert.show('Appointment created', {\n                        type: 'success',\n                        timeout: 2000,\n                    });\n                })\n                .catch(() => {\n                    dispatch(setMessage('Something went wrong'));\n                    setLoading(false);\n                    setSuccessful(false);\n                });\n        } else {\n            setLoading(false);\n        }\n    };\n    const selection = props.doctors.map(doctor => (\n        <option key={doctor.id} value={doctor.id}>\n            {doctor.name} - {doctor.specialty}\n        </option>\n    ));\n\n    if (!currentUser) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    if (successful) {\n        return <Navigate to=\"/appointments\" />;\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"appointmentDate\">Appointment Date</label>\n                                <Input\n                                    type=\"datetime-local\"\n                                    className=\"form-control\"\n                                    name=\"appointmentDate\"\n                                    value={appointmentDate}\n                                    onChange={onChangeAppointmentDate}\n                                    validations={[required]}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"doctorId\">Select list:</label>\n                                <select className=\"form-control\" id=\"doctorId\" onChange={onChangeDoctorId} value={doctorId}>\n                                    {selection}\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" disabled={loading || loadingDoctors} type=\"submit\">\n                                    {loading && (\n                                        <span className=\"spinner-border spinner-border-sm\" />\n                                    )}\n                                    <span>Book</span>\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { doctors: state.doctors }\n}\n\nexport default connect(mapStateToProps)(NewAppointment);","import { Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport DoctorsContainer from './components/DoctorsContainer';\nimport Doctor from './components/Doctor';\nimport AppointmentsContainer from './components/AppointmentsContainer';\nimport Appointment from './components/Appointment';\nimport NewAppointment from './components/NewAppointment';\nimport DoctorForm from './components/DoctorForm';\n\nfunction App() {\n  return (\n    <div>\n      <Sidebar />\n      <main>\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/doctors\" element={<DoctorsContainer />} />\n          <Route path=\"/doctors/:id\" element={<Doctor />} />\n          <Route path=\"/doctorForm\" element={<DoctorForm />} />\n          <Route path=\"/appointments\" element={<AppointmentsContainer />} />\n          <Route path=\"/appointments/new\" element={<NewAppointment />} />\n          <Route path=\"/appointments/:id\" element={<Appointment />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n} from '../actions/permit';\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = user ? { isLoggedIn: true, user } : { isLoggedIn: false, user: null };\n\nexport default function auth(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: payload.user,\n            };\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: payload.user,\n            };\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport auth from './authReducer';\nimport message from './messageReducer';\nimport { appointmentsReducer } from './appointmentReducer';\nimport { doctorsReducer } from './doctorsReducer';\n\nexport const rootReducer = combineReducers({\n    doctors: doctorsReducer,\n    appointments: appointmentsReducer,\n    auth,\n    message\n});\n","export const doctorsReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_DOCTORS':\n            return action.payload\n        case 'ADD_DOCTOR':\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}\n","export const appointmentsReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_APPOINTMENTS':\n            return action.payload\n        case 'ADD_APPOINTMENT':\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}","import { SET_MESSAGE, CLEAR_MESSAGE } from '../actions/permit';\n\nexport default function message(state = [], action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_MESSAGE:\n            return { message: payload };\n\n        case CLEAR_MESSAGE:\n            return { message: '' };\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/rootReducer'\n\nconst composeEnhancers = composeWithDevTools({\n\n})\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <Router>\n      <AlertProvider template={AlertTemplate}>\n        <App />\n      </AlertProvider>\n    </Router>\n  </Provider>\n);\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Doctor\":\"Doctor_Doctor__1nzZg\",\"doctorImg\":\"Doctor_doctorImg__1y4-w\",\"badge\":\"Doctor_badge__2yDIn\",\"badgeSecondary\":\"Doctor_badgeSecondary__3qSfz\",\"btn\":\"Doctor_btn__3SYdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Doctors\":\"Doctors_Doctors__2nCuG\",\"img\":\"Doctors_img__1xMJ-\",\"border\":\"Doctors_border__1ndPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__2Ts0o\",\"Overlay\":\"Home_Overlay__u-BXB\",\"Button\":\"Home_Button__1r6Zb\",\"Select\":\"Home_Select__2KGMJ\"};"],"sourceRoot":""}